@startuml
!include style.puml
skinparam arrowThickness 1.1
skinparam arrowColor LOGIC_COLOR_T4
skinparam classBackgroundColor LOGIC_COLOR

package Logic as LogicPackage {

package "Parser Classes" as ParserClasses{
}
package "Utility Classes" as UtilityClasses{
}
Class XYZCommand
Class CommandResult
Class "<<interface>>\nCommandFactory" as CommandFactory
Class CommandRegistry
Class "{abstract}\nCommand" as Command


Class "<<interface>>\nLogic" as Logic
Class LogicManager
}

package Model {
Class HiddenModel #FFFFFF
}

package Storage {
}

Class HiddenOutside #FFFFFF
Class HiddenOutsideUi #FFFFFF
HiddenOutside ..> Logic

LogicManager .right.|> Logic
LogicManager -down->"1" ParserClasses
ParserClasses ..> XYZCommand : <<create>>

XYZCommand -up-|> Command
LogicManager .left.> Command : <<call>>

LogicManager --> Model
LogicManager --> Storage
Storage --[hidden] Model
Command .[hidden]up.> Storage
Command .right.> Model
note right of XYZCommand: XYZCommand = AddCommand, \nFindCommand, etc
XYZCommand .left.> UtilityClasses : <<use>>
HiddenOutsideUi ..> UtilityClasses
Logic ..> CommandResult
LogicManager .down.> CommandResult
Command .up.> CommandResult : <<create>>
CommandFactory .down.> Command : <<create>>
CommandRegistry *-down- "0..*" CommandFactory
ParserClasses <..> CommandFactory
ParserClasses <..> CommandRegistry
@enduml
